PRG            = playground
OBJ            = $(PRG).o

#MCU_TARGET     = atmega168
MCU_TARGET     = atmega644
#MCU_TARGET     = atmega644p

OPTIMIZE       = -O2

AVR_FREQ   = 16000000L

DEFS           =
LIBS           =

# You should not have to change anything below here.

CC             = /usr/local/avr/bin/avr-gcc

# Override is only needed by avr-lib build system.

override CFLAGS        = -g -Wall $(OPTIMIZE) -mmcu=$(MCU_TARGET) -DF_CPU=$(AVR_FREQ) $(DEFS)
override LDFLAGS       = -Wl,-Map,$(PRG).map
#override LDFLAGS       = -Wl,$(LDSECTION)


OBJCOPY        = /usr/local/avr/bin/avr-objcopy
OBJDUMP        = /usr/local/avr/bin/avr-objdump

all: $(PRG).elf lst text eeprom

$(PRG).elf: $(OBJ) wiring.o uart.o buffer.o pins_arduino.o wiring_analog.o wiring_digital.o wiring_pulse.o wiring_serial.o wiring_shift.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

# dependency:
$(OBJ): $(PRG).c temps.h
	$(CC) $(CFLAGS) -o $@ -c $<

wiring.o: wiring.c
	$(CC) $(CFLAGS) -o $@ -c $^

pins_arduino.o: pins_arduino.c
	$(CC) $(CFLAGS) -o $@ -c $^

wiring_analog.o: wiring_analog.c
	$(CC) $(CFLAGS) -o $@ -c $^

wiring_digital.o: wiring_digital.c
	$(CC) $(CFLAGS) -o $@ -c $^

wiring_pulse.o: wiring_pulse.c
	$(CC) $(CFLAGS) -o $@ -c $^

wiring_serial.o: wiring_serial.c
	$(CC) $(CFLAGS) -o $@ -c $^

wiring_shift.o: wiring_shift.c
	$(CC) $(CFLAGS) -o $@ -c $^

uart.o: uart.c
	$(CC) $(CFLAGS) -o $@ -c $^

buffer.o: buffer.c
	$(CC) $(CFLAGS) -o $@ -c $^

clean:
	rm -rf *.o $(PRG).elf *.eps *.png *.pdf *.bak
	rm -rf *.lst *.map $(EXTRA_CLEAN_FILES)

lst:  $(PRG).lst

%.lst: %.elf
	$(OBJDUMP) -h -S $< > $@

# Rules for building the .text rom images

text: hex bin srec

hex:  $(PRG).hex
bin:  $(PRG).bin
srec: $(PRG).srec

%.hex: %.elf
	$(OBJCOPY) -j .text -j .data -O ihex $< $@

%.srec: %.elf
	$(OBJCOPY) -j .text -j .data -O srec $< $@

%.bin: %.elf
	$(OBJCOPY) -j .text -j .data -O binary $< $@

# Rules for building the .eeprom rom images

eeprom: ehex ebin esrec

ehex:  $(PRG)_eeprom.hex
ebin:  $(PRG)_eeprom.bin
esrec: $(PRG)_eeprom.srec

%_eeprom.hex: %.elf
	$(OBJCOPY) -j .eeprom --change-section-lma .eeprom=0 -O ihex $< $@ \
	|| { echo empty $@ not generated; exit 0; }

%_eeprom.srec: %.elf
	$(OBJCOPY) -j .eeprom --change-section-lma .eeprom=0 -O srec $< $@ \
	|| { echo empty $@ not generated; exit 0; }

%_eeprom.bin: %.elf
	$(OBJCOPY) -j .eeprom --change-section-lma .eeprom=0 -O binary $< $@ \
	|| { echo empty $@ not generated; exit 0; }

# Every thing below here is used by avr-libc's build system and can be ignored
# by the casual user.

FIG2DEV                 = fig2dev
EXTRA_CLEAN_FILES       = *.hex *.bin *.srec

dox: eps png pdf

eps: $(PRG).eps
png: $(PRG).png
pdf: $(PRG).pdf

%.eps: %.fig
	$(FIG2DEV) -L eps $< $@

%.pdf: %.fig
	$(FIG2DEV) -L pdf $< $@

%.png: %.fig
	$(FIG2DEV) -L png $< $@
